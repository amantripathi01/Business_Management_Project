# ********RoostGPT********

# Test generated by RoostGPT for test karateTest2April using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /apikeys_post for http method type POST 
# RoostTestHash=28a54f1579
# 
# 

# ********RoostGPT********
Feature: API Key Creation

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * configure headers = { ApiKeyAuth: '#(authToken)' }

Scenario: Create API Key Successfully
  Given path '/apikeys'
  When method post
  Then status 201
  And match header api-version == '1.0.0'
  And match header location contains '/apikeys/'
  And match response == { id: '#string', token: '#regex[^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$]', createdAt: '#string' }

Scenario: Create API Key with bad request
  Given path '/apikeys'
  When method post
  Then status 400
  And match header api-version == '1.0.0'
  And match response == { error: '#string', description: '#string' }

Scenario: Create API Key without authentication
  Given path '/apikeys'
  And remove header ApiKeyAuth
  When method post
  Then status 401
  And match header api-version == '1.0.0'
  And match response == { error: '#string', description: '#string' }
