# ********RoostGPT********

# Test generated by RoostGPT for test karateTest2April using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /login_post for http method type POST 
# RoostTestHash=e0cf5b2e0e
# 
# 

# ********RoostGPT********
Feature: Login using OTP: creates a session

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase

Scenario Outline: Test successful login
  Given path '/login'
  And request {"client": "<client>", "email": "<email>", "otp": "<otp>"}
  When method post
  Then status 201
  And match header api-version == '1.0.0'
  And match response contains {token: '#regex^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'}

  Examples:
    | client | email               | otp    |
    | 'test' | 'test@example.com' | '1234' |

Scenario Outline: Test login with incorrect details
  Given path '/login'
  And request {"client": "<client>", "email": "<email>", "otp": "<otp>"}
  When method post
  Then status 400
  And match header api-version == '1.0.0'
  And match response contains {error: '#string', description: '#string'}

  Examples:
    | client | email               | otp    |
    | 'test' | 'invalid_email'     | '1234' |
    | 'test' | 'test@example.com' | 'wrong_otp' |
