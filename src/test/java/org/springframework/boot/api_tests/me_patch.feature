# ********RoostGPT********

# Test generated by RoostGPT for test karateTest2April using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /me_patch for http method type PATCH 
# RoostTestHash=6dd436357d
# 
# 

# ********RoostGPT********
Feature: Account API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * def authHeader = { ApiKeyAuth: '#(authToken)' }

Scenario Outline: Change my settings or account name

  Given path '/me'
  And request <requestBody>
  And headers authHeader
  When method post
  Then status <statusCode>
  And match responseHeaders contains { 'api-version': '#string' }
  And match response == <responseBody>

  Examples:
    | requestBody                                                                                                     | statusCode | responseBody                                                                                                                                                                                                                                 |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": {} }"""                       | 200        | """{ "id": '#string', "did": '#? string', "name": '#string', "image": '#string', "email": '#string', "settings": '#object', "createdAt": '#string', "updatedAt": '#string' }"""                                                            |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": {} }"""                       | 400        | """{ "error": 'error/code', "description": 'Descriptive Error Message' }"""                                                                                                       |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": {} }"""                       | 401        | """{ "error": 'error/code', "description": 'Descriptive Error Message' }"""                                                                                                       |
    | """{ "name": "John Doe", "image": "invalid_image_data", "settings": {} }"""                                     | 400        | """{ "error": 'validation/image-pattern', "description": 'Descriptive Error Message', "value": 'invalid_image_data', "field": 'image', "schema_field": 'image' }"""                   |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": { "invalid_setting": "invalid_value" } }""" | 400 | """{ "error": 'validation/setting-pattern', "description": 'Descriptive Error Message', "value": { "invalid_setting": "invalid_value" }, "field": 'settings', "schema_field": 'settings' }""" |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": { "invalid_setting": "invalid_value" } }""" | 401 | """{ "error": 'validation/setting-pattern', "description": 'Descriptive Error Message', "value": { "invalid_setting": "invalid_value" }, "field": 'settings', "schema_field": 'settings' }""" |
    | """{ "name": "Invalid Name", "image": "data:image/jpeg;base64,<clipped>", "settings": {} }"""                   | 400        | """{ "error": 'validation/name-pattern', "description": 'Descriptive Error Message', "value": 'Invalid Name', "field": 'name', "schema_field": 'name' }"""                           |
    | """{ "name": "Invalid Name", "image": "data:image/jpeg;base64,<clipped>", "settings": {} }"""                   | 401        | """{ "error": 'validation/name-pattern', "description": 'Descriptive Error Message', "value": 'Invalid Name', "field": 'name', "schema_field": 'name' }"""                           |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": { "valid_setting": "valid_value" } }""" | 200 | """{ "id": '#string', "did": '#? string', "name": '#string', "image": '#string', "email": '#string', "settings": { "valid_setting": "valid_value" }, "createdAt": '#string', "updatedAt": '#string' }""" |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": { "valid_setting": "valid_value" } }""" | 400 | """{ "error": 'validation/setting-pattern', "description": 'Descriptive Error Message', "value": { "valid_setting": "valid_value" }, "field": 'settings', "schema_field": 'settings' }""" |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": { "valid_setting": "valid_value" } }""" | 401 | """{ "error": 'validation/setting-pattern', "description": 'Descriptive Error Message', "value": { "valid_setting": "valid_value" }, "field": 'settings', "schema_field": 'settings' }""" |
    | """{ "name": "John Doe", "image": "https://cdn.credentialregiater.com/2571c54e-2cde-4434-83f2-c329f74adc27.png", "settings": {} }""" | 200 | """{ "id": '#string', "did": '#? string', "name": '#string', "image": 'https://cdn.credentialregiater.com/2571c54e-2cde-4434-83f2-c329f74adc27.png', "email": '#string', "settings": '#object', "createdAt": '#string', "updatedAt": '#string' }""" |
    | """{ "name": "John Doe", "image": "https://cdn.credentialregiater.com/2571c54e-2cde-4434-83f2-c329f74adc27.png", "settings": {} }""" | 400 | """{ "error": 'validation/image-pattern', "description": 'Descriptive Error Message', "value": 'https://cdn.credentialregiater.com/2571c54e-2cde-4434-83f2-c329f74adc27.png', "field": 'image', "schema_field": 'image' }""" |
    | """{ "name": "John Doe", "image": "https://cdn.credentialregiater.com/2571c54e-2cde-4434-83f2-c329f74adc27.png", "settings": {} }""" | 401 | """{ "error": 'validation/image-pattern', "description": 'Descriptive Error Message', "value": 'https://cdn.credentialregiater.com/2571c54e-2cde-4434-83f2-c329f74adc27.png', "field": 'image', "schema_field": 'image' }""" |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": { "valid_setting_1": "valid_value_1", "valid_setting_2": "valid_value_2" } }""" | 200 | """{ "id": '#string', "did": '#? string', "name": '#string', "image": '#string', "email": '#string', "settings": { "valid_setting_1": "valid_value_1", "valid_setting_2": "valid_value_2" }, "createdAt": '#string', "updatedAt": '#string' }""" |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": { "valid_setting_1": "valid_value_1", "valid_setting_2": "valid_value_2" } }""" | 400 | """{ "error": 'validation/setting-pattern', "description": 'Descriptive Error Message', "value": { "valid_setting_1": "valid_value_1", "valid_setting_2": "valid_value_2" }, "field": 'settings', "schema_field": 'settings' }""" |
    | """{ "name": "John Doe", "image": "data:image/jpeg;base64,<clipped>", "settings": { "valid_setting_1": "valid_value_1", "valid_setting_2": "valid_value_2" } }""" | 401 | """{ "error": 'validation/setting-pattern', "description": 'Descriptive Error Message', "value": { "valid_setting_1": "valid_value_1", "valid_setting_2": "valid_value_2" }, "field": 'settings', "schema_field": 'settings' }""" |
