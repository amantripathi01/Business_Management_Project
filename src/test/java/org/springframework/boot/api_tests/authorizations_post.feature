# ********RoostGPT********

# Test generated by RoostGPT for test karateTest2April using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /authorizations_post for http method type POST 
# RoostTestHash=ed8c1b7bff
# 
# 

# ********RoostGPT********
Feature: Authorizations API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * configure headers = { ApiKeyAuth: '#(authToken)' }

Scenario Outline: Authorize another existing Account to access my Account
  Given path '/authorizations'
  And request { email: '<email>' }
  When method post
  Then status <status>
  And match responseHeaders contains { 'api-version': '#string', 'location': '#string' }
  And match response == { id: '#uuid', name: '#string', email: '#string', createdAt: '#string', updatedAt: '#string' }

  Examples:
    | email                         | status |
    | 'test.user@example.com'       | 201    |
    | 'invalid.email.com'           | 400    |
    | 'unauthorized.user@example.com' | 401    |

Scenario Outline: Validate response for invalid requests
  Given path '/authorizations'
  And request { email: '<email>' }
  When method post
  Then status <status>
  And match response == { error: '#string', description: '#string' }

  Examples:
    | email           | status |
    | 'invalid.email' | 400    |
    | 'unauthorized'  | 401    |
