# ********RoostGPT********

# Test generated by RoostGPT for test karateTest2April using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /recipients/branches_get for http method type GET 
# RoostTestHash=74a40da00e
# 
# 

# ********RoostGPT********
Feature: Recipient Branch API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * configure headers = { ApiKeyAuth: '#(authToken)' }

Scenario Outline: Test GET /recipients/branches endpoint with valid parameters
  Given path '/recipients/branches'
  And params { coc-number: '#(cocNumber)', coc-branch-number: '#(cocBranchNumber)', trade-name: '#(tradeName)', size: '#(size)', offset: '#(offset)' }
  When method get
  Then status 200
  And match responseHeaders['api-version'] == '1.0.0'
  And match responseHeaders['page-size'] == '#(size)'
  And match responseHeaders['page-offset'] == '#(offset)'
  And match response contains '''{ total: '#number', branches: '#array' }'''

Examples:
  | cocNumber | cocBranchNumber | tradeName | size | offset |
  | '12345678' | '123456789012' | 'Test Trade Name' | 20 | 0 |
  | '87654321' | '210987654321' | 'Another Test Trade Name' | 50 | 10 |

Scenario Outline: Test GET /recipients/branches endpoint with invalid parameters
  Given path '/recipients/branches'
  And params { coc-number: '#(cocNumber)', coc-branch-number: '#(cocBranchNumber)', trade-name: '#(tradeName)', size: '#(size)', offset: '#(offset)' }
  When method get
  Then status 400
  And match responseHeaders['api-version'] == '1.0.0'
  And match response contains '''{ error: '#string', description: '#string' }'''

Examples:
  | cocNumber | cocBranchNumber | tradeName | size | offset |
  | '123' | '123456789012' | 'Test Trade Name' | 20 | 0 |
  | '87654321' | '210987654321' | 'Another Test Trade Name' | 100 | 10 |

Scenario: Test GET /recipients/branches endpoint without authentication
  Given path '/recipients/branches'
  When method get
  Then status 401
  And match responseHeaders['api-version'] == '1.0.0'
  And match response contains '''{ error: '#string', description: '#string' }'''
